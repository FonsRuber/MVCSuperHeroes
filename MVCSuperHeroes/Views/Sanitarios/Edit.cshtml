@using MVCSuperHeroes.Z_Capa2_Servicios.ClasesSuperHeroe

@model SanitarioDTO

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Sanitarios", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Sanitario</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.idSuperHeroe)

    <div class="float-right col-3 overflow-hidden" style="height:300px;">
        <img class="col-12" src="~/Content/images/@(Model.ImagenPath ?? "no-image-available.png")" />
    </div>
    <div class="col-9">
        <div class="form-group">
            <div class="col-md-10 d-inline-flex">
                @Html.LabelFor(model => model.dni, htmlAttributes: new { @class = "control-label col-4" })
                @Html.EditorFor(model => model.dni, new { htmlAttributes = new { @class = "form-control col-6", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.dni, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.dni)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 d-inline-flex">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-4" })
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control col-6", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.nombre)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 d-inline-flex">
                @Html.LabelFor(model => model.apellidos, htmlAttributes: new { @class = "control-label col-4" })
                @Html.EditorFor(model => model.apellidos, new { htmlAttributes = new { @class = "form-control col-6", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.apellidos, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.apellidos)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10 d-inline-flex">
                @Html.LabelFor(model => model.edad, htmlAttributes: new { @class = "control-label col-4" })
                @Html.EditorFor(model => model.edad, new { htmlAttributes = new { @class = "form-control col-6", disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.edad, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.edad)
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
